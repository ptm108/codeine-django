# Generated by Django 3.1.7 on 2021-04-12 14:23

import courses.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('overview', models.TextField(default='', null=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('learning_objectives', models.JSONField()),
                ('requirements', models.JSONField()),
                ('description', models.TextField()),
                ('introduction_video_url', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('github_repo', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('thumbnail', models.ImageField(default=None, null=True, upload_to=courses.models.image_directory_path)),
                ('views', models.PositiveIntegerField(default=0)),
                ('coding_languages', multiselectfield.db.fields.MultiSelectField(choices=[('PY', 'Python'), ('JAVA', 'Java'), ('JS', 'Javascript'), ('CPP', 'C++'), ('CS', 'C#'), ('HTML', 'HTML'), ('CSS', 'CSS'), ('RUBY', 'Ruby')], max_length=31)),
                ('languages', multiselectfield.db.fields.MultiSelectField(choices=[('ENG', 'English'), ('MAN', 'Mandarin'), ('FRE', 'French')], max_length=11)),
                ('categories', multiselectfield.db.fields.MultiSelectField(choices=[('SEC', 'Security'), ('DB', 'Database Administration'), ('FE', 'Frontend'), ('BE', 'Backend'), ('UI', 'UI/UX'), ('ML', 'Machine Learning')], max_length=18)),
                ('is_published', models.BooleanField(default=False)),
                ('published_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('exp_points', models.PositiveIntegerField()),
                ('pro', models.BooleanField(default=False)),
                ('duration', models.PositiveSmallIntegerField()),
                ('partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='common.partner')),
            ],
            options={
                'ordering': ['is_deleted', 'published_date'],
            },
        ),
        migrations.CreateModel(
            name='CourseComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('display_id', models.PositiveIntegerField()),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('time_edited', models.DateTimeField(blank=True, default=None, null=True)),
                ('pinned', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-pinned'],
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('material_type', models.CharField(choices=[('FILE', 'File'), ('VIDEO', 'Video'), ('QUIZ', 'Quiz')], max_length=255)),
                ('order', models.PositiveSmallIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_materials', to='courses.chapter')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.TextField()),
                ('subtitle', models.TextField(blank=True, default='', null=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='QuestionBank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_banks', to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('passing_marks', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('instructions', models.TextField(default='')),
                ('is_randomized', models.BooleanField(default=False)),
                ('course', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='courses.course')),
                ('course_material', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.coursematerial')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField()),
                ('course_material', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='courses.coursematerial')),
            ],
        ),
        migrations.CreateModel(
            name='ShortAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField(default=1)),
                ('keywords', models.JSONField()),
                ('question', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.question')),
            ],
        ),
        migrations.CreateModel(
            name='QuizResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('passed', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_results', to='common.member')),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quiz_results', to='courses.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField(blank=True, null=True)),
                ('responses', models.JSONField(blank=True, null=True)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quiz_answers', to='courses.question')),
                ('quiz_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_answers', to='courses.quizresult')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('count', models.PositiveSmallIntegerField(default=1)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('question_bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='courses.questionbank')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_groups', to='courses.quiz')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='question_bank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.questionbank'),
        ),
        migrations.CreateModel(
            name='MRQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField(default=1)),
                ('options', models.JSONField()),
                ('correct_answer', models.JSONField()),
                ('question', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.question')),
            ],
        ),
        migrations.CreateModel(
            name='MCQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.PositiveIntegerField(default=1)),
                ('options', models.JSONField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('question', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.question')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('progress', models.DecimalField(decimal_places=2, max_digits=5)),
                ('materials_done', models.JSONField(default=list)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrollments', to='courses.course')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='common.member')),
            ],
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('rating', models.PositiveSmallIntegerField(validators=[courses.models.validate_rating])),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to='courses.course')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.member')),
            ],
        ),
        migrations.CreateModel(
            name='CourseFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_file', models.FileField(blank=True, max_length=255, null=True, upload_to=courses.models.zipfile_directory_path)),
                ('google_drive_url', models.TextField(blank=True, default='', null=True)),
                ('course_material', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_file', to='courses.coursematerial')),
            ],
        ),
        migrations.CreateModel(
            name='CourseCommentEngagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to='courses.coursecomment')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='common.member')),
            ],
        ),
        migrations.AddField(
            model_name='coursecomment',
            name='course_material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_comments', to='courses.coursematerial'),
        ),
        migrations.AddField(
            model_name='coursecomment',
            name='reply_to',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='courses.coursecomment'),
        ),
        migrations.AddField(
            model_name='coursecomment',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='chapter',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='courses.course'),
        ),
        migrations.AddConstraint(
            model_name='questionbank',
            constraint=models.UniqueConstraint(fields=('course', 'label'), name='Course_QuestionBank Unique Constraint: label'),
        ),
    ]
